package com.mycompany.mavenproject1;

import java.sql.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Xkalk
 */
public class RestaurantGui extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RestaurantGui.class.getName());

    /**
     * Creates new form RestaurantGui
     */
    public RestaurantGui() {
        initComponents();
        myConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connectPanel = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JButton();
        connectivityText = new javax.swing.JLabel();
        menuTabPane = new javax.swing.JTabbedPane();
        customersPanel = new javax.swing.JPanel();
        customersScroll = new javax.swing.JScrollPane();
        customersTable = new javax.swing.JTable();
        showCustBtn = new javax.swing.JButton();
        employeesPanel = new javax.swing.JPanel();
        employeesScroll = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();
        showEmpBtn = new javax.swing.JButton();
        orderPanel = new javax.swing.JPanel();
        orderScroll = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        showOrderBtn = new javax.swing.JButton();
        menuPanel = new javax.swing.JPanel();
        menuScroll = new javax.swing.JScrollPane();
        MenuTable = new javax.swing.JTable();
        showMenuBtn = new javax.swing.JButton();
        reservationPanel = new javax.swing.JPanel();
        reservationScroll = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        showResBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        connectivityText.setText("Pending...");

        javax.swing.GroupLayout connectPanelLayout = new javax.swing.GroupLayout(connectPanel);
        connectPanel.setLayout(connectPanelLayout);
        connectPanelLayout.setHorizontalGroup(
            connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectivityText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(logoutBtn)
                .addContainerGap())
        );
        connectPanelLayout.setVerticalGroup(
            connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(connectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn)
                    .addComponent(connectivityText))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        customersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        customersScroll.setViewportView(customersTable);

        showCustBtn.setText("Show");
        showCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCustBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customersPanelLayout = new javax.swing.GroupLayout(customersPanel);
        customersPanel.setLayout(customersPanelLayout);
        customersPanelLayout.setHorizontalGroup(
            customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showCustBtn)
                .addGap(18, 18, 18)
                .addComponent(customersScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        customersPanelLayout.setVerticalGroup(
            customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customersPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(customersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showCustBtn)
                    .addComponent(customersScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        menuTabPane.addTab("Customers", customersPanel);

        employeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        employeesScroll.setViewportView(employeesTable);

        showEmpBtn.setText("Show");
        showEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEmpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employeesPanelLayout = new javax.swing.GroupLayout(employeesPanel);
        employeesPanel.setLayout(employeesPanelLayout);
        employeesPanelLayout.setHorizontalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showEmpBtn)
                .addGap(18, 18, 18)
                .addComponent(employeesScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        employeesPanelLayout.setVerticalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeesPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showEmpBtn)
                    .addComponent(employeesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        menuTabPane.addTab("Employees", employeesPanel);

        orderScroll.setViewportView(orderTable);

        showOrderBtn.setText("Show");
        showOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOrderBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout orderPanelLayout = new javax.swing.GroupLayout(orderPanel);
        orderPanel.setLayout(orderPanelLayout);
        orderPanelLayout.setHorizontalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showOrderBtn)
                .addGap(18, 18, 18)
                .addComponent(orderScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        orderPanelLayout.setVerticalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showOrderBtn)
                    .addComponent(orderScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        menuTabPane.addTab("Orders", orderPanel);

        menuScroll.setViewportView(MenuTable);

        showMenuBtn.setText("Show");
        showMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMenuBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showMenuBtn)
                .addGap(18, 18, 18)
                .addComponent(menuScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showMenuBtn)
                    .addComponent(menuScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        menuTabPane.addTab("Menu", menuPanel);

        reservationScroll.setViewportView(reservationTable);

        showResBtn.setText("Show");
        showResBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showResBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reservationPanelLayout = new javax.swing.GroupLayout(reservationPanel);
        reservationPanel.setLayout(reservationPanelLayout);
        reservationPanelLayout.setHorizontalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showResBtn)
                .addGap(18, 18, 18)
                .addComponent(reservationScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addContainerGap())
        );
        reservationPanelLayout.setVerticalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showResBtn)
                    .addComponent(reservationScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        menuTabPane.addTab("Reservations", reservationPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(menuTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(connectPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(connectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuTabPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        try{
            connection.close();
            if (connection != null && connection.isClosed()) {
                connectivityText.setText("Disconnected");
            }
        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
        
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void showCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCustBtnActionPerformed
        try{
        Statement statement=connection.createStatement();
        String query=PropertyLoader.get("get.customers");
        ResultSet rs = statement.executeQuery(query);
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = (DefaultTableModel) customersTable.getModel();
        
        //get columns
        int cols = rsmd.getColumnCount();
        String[] colName=new String[cols];
        for(int i=0;i<cols;i++)
            colName[i]=rsmd.getColumnName(i+1);
        model.setColumnIdentifiers(colName);
        
        //populate rows
        while(rs.next()){
            Object[] row = new Object[cols];
            for(int i=1; i<= cols; i++)
                row[i-1] = rs.getObject(i);
            model.addRow(row);
        }
        statement.close();

        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }//GEN-LAST:event_showCustBtnActionPerformed

    private void showEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEmpBtnActionPerformed
        try{
        Statement statement=connection.createStatement();
        String query=PropertyLoader.get("get.employees");
        ResultSet rs = statement.executeQuery(query);
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = (DefaultTableModel)employeesTable.getModel();
        
        //get columns
        int cols = rsmd.getColumnCount();
        String[] colName=new String[cols];
        for(int i=0;i<cols;i++)
            colName[i]=rsmd.getColumnName(i+1);
        model.setColumnIdentifiers(colName);
        
        //populate rows
        while(rs.next()){
            Object[] row = new Object[cols];
            for(int i=1; i<= cols; i++)
                row[i-1] = rs.getObject(i);
            model.addRow(row);
        }
        statement.close();

        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }//GEN-LAST:event_showEmpBtnActionPerformed

    private void showOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showOrderBtnActionPerformed
        try{
        Statement statement=connection.createStatement();
        String query=PropertyLoader.get("get.orders");
        ResultSet rs = statement.executeQuery(query);
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
        
        //get columns
        int cols = rsmd.getColumnCount();
        String[] colName=new String[cols];
        for(int i=0;i<cols;i++)
            colName[i]=rsmd.getColumnName(i+1);
        model.setColumnIdentifiers(colName);
        
        //populate rows
        while(rs.next()){
            Object[] row = new Object[cols];
            for(int i=1; i<= cols; i++)
                row[i-1] = rs.getObject(i);
            model.addRow(row);
        }
        statement.close();

        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }//GEN-LAST:event_showOrderBtnActionPerformed

    private void showMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMenuBtnActionPerformed
        try{
        Statement statement=connection.createStatement();
        String query=PropertyLoader.get("get.menuItems");
        ResultSet rs = statement.executeQuery(query);
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = (DefaultTableModel) MenuTable.getModel();
        
        //get columns
        int cols = rsmd.getColumnCount();
        String[] colName=new String[cols];
        for(int i=0;i<cols;i++)
            colName[i]=rsmd.getColumnName(i+1);
        model.setColumnIdentifiers(colName);
        
        //populate rows
        while(rs.next()){
            Object[] row = new Object[cols];
            for(int i=1; i<= cols; i++)
                row[i-1] = rs.getObject(i);
            model.addRow(row);
        }
        statement.close();

        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }//GEN-LAST:event_showMenuBtnActionPerformed

    private void showResBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showResBtnActionPerformed
        try{
        Statement statement=connection.createStatement();
        String query=PropertyLoader.get("get.reservations");
        ResultSet rs = statement.executeQuery(query);
        ResultSetMetaData rsmd = rs.getMetaData();
        DefaultTableModel model = (DefaultTableModel) reservationTable.getModel();
        
        //get columns
        int cols = rsmd.getColumnCount();
        String[] colName=new String[cols];
        for(int i=0;i<cols;i++)
            colName[i]=rsmd.getColumnName(i+1);
        model.setColumnIdentifiers(colName);
        
        //populate rows
        while(rs.next()){
            Object[] row = new Object[cols];
            for(int i=1; i<= cols; i++)
                row[i-1] = rs.getObject(i);
            model.addRow(row);
        }
        statement.close();

        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
    }//GEN-LAST:event_showResBtnActionPerformed

    void myConnection(){
        try{    
            connection = DriverManager.getConnection(url, username, password);
            if (connection != null && !connection.isClosed()) {
                connectivityText.setText("Connected");
            }
        }catch(SQLException ex){
            System.out.println("\n -- SQL Exception --- \n");
            while(ex != null) {
		System.out.println("Message: " + ex.getMessage());
		ex = ex.getNextException();
            }
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new RestaurantGui().setVisible(true));
        
        
    }

    
    static String     url = PropertyLoader.get("db.url") ;
    static Connection connection = null;
    static String     username = PropertyLoader.get("db.user");
    static String     password = PropertyLoader.get("db.password");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MenuTable;
    private javax.swing.JPanel connectPanel;
    private javax.swing.JLabel connectivityText;
    private javax.swing.JPanel customersPanel;
    private javax.swing.JScrollPane customersScroll;
    private javax.swing.JTable customersTable;
    private javax.swing.JPanel employeesPanel;
    private javax.swing.JScrollPane employeesScroll;
    private javax.swing.JTable employeesTable;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JScrollPane menuScroll;
    private javax.swing.JTabbedPane menuTabPane;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JScrollPane orderScroll;
    private javax.swing.JTable orderTable;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JScrollPane reservationScroll;
    private javax.swing.JTable reservationTable;
    private javax.swing.JButton showCustBtn;
    private javax.swing.JButton showEmpBtn;
    private javax.swing.JButton showMenuBtn;
    private javax.swing.JButton showOrderBtn;
    private javax.swing.JButton showResBtn;
    // End of variables declaration//GEN-END:variables
    }
